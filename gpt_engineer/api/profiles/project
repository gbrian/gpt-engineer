# Project definition

## Project Overview
The GPT-Engineer project is a tool designed to automate software engineering tasks using GPT-4. The primary purpose of this project is to provide a flexible framework that can run different sequences of steps, each guided by a set of predefined prompts. The AI is expected to follow best practices and reason itself to the right decisions to ensure high-quality code generation. This project aims to enhance developer workflows and improve code generation processes.

## Key Concepts
The key concepts and components of the GPT-Engineer project include:

1. **Architecture**:
   - The project involves a pipeline for question answering (QA) over code, similar to document question answering but with specific strategies for handling code.
   - The architecture includes loading Python project files, splitting the code into documents while retaining metadata, and using specific tools and libraries like LangChain, openai, tiktoken, and chromadb.

2. **Main Modules**:
   - **Document Loaders**: The project uses `langchain.document_loaders.TextLoader` to upload all Python project files.
   - **Code Splitting**: The `LanguageParser` from `langchain.document_loaders.parsers` is used to keep top-level functions and classes together in a single document, put remaining code into a separate document, and retain metadata about where each split comes from.
   - **Metadata Retention**: Ensuring that metadata about the origin of each code split is retained for better traceability and context.

3. **Tools and Libraries**:
   - **LangChain**: Used for loading and processing Python project files.
   - **openai**: Utilized for integrating GPT-4 capabilities.
   - **tiktoken**: A library for tokenizing text.
   - **chromadb**: A database for storing and querying code documents.

4. **Project Roadmap**:
   - **Code Generation**: Focus on making code generation verifiable by breaking it into small, testable steps.
   - **Automatic PR Reviews**: Setting up automatic pull request reviews using tools like Codium pr-agent.
   - **LLM Tests in CI**: Running small tests with GPT-3.5 in continuous integration (CI) to ensure simple code generation still works.

5. **Developer Contributions**:
   - Developers can contribute by posting design documents, submitting pull requests, and reviewing others' pull requests.
   - The project encourages experimentation and sharing findings in the community.

This document provides a comprehensive overview of the GPT-Engineer project, detailing its purpose, key concepts, and components. It serves as a guide for developers to understand and contribute to the project effectively.